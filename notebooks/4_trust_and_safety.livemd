<!-- livebook:{"file_entries":[{"name":"arizona.jpg","type":"attachment"},{"name":"maryland.jpg","type":"attachment"},{"name":"rewards_card.jpg","type":"attachment"},{"name":"scary.jpg","type":"attachment"},{"name":"school_id.jpg","type":"attachment"},{"name":"texas.jpg","type":"attachment"}]} -->

# 4. Trust & Safety

```elixir
Mix.install(
  [
    {:kino_bumblebee, "~> 0.5.0"},
    {:kino_vega_lite, "~> 0.1"},
    {:stb_image, "~> 0.6"},
    {:exla, ">= 0.0.0"},
    {:req, "~> 0.5.6"}
  ],
  config: [nx: [default_backend: EXLA.Backend]]
)
```

## Bumblebee Vision Image-to-Text

Use a Bumblebee pre-trained model to caption uploaded images.

<!-- livebook:{"break_markdown":true} -->

### Out of Sight

Axon provides Nx-powered Neural Networks.

Bumblebee provides pre-trained Neural Network models on top of Axon. It includes integration with Hugging Face ðŸ¤— Models.

```elixir
repo = {:hf, "Salesforce/blip-image-captioning-base"}
{:ok, model_info} = Bumblebee.load_model(repo)
{:ok, featurizer} = Bumblebee.load_featurizer(repo)
{:ok, tokenizer} = Bumblebee.load_tokenizer(repo)
{:ok, generation_config} = Bumblebee.load_generation_config(repo)
generation_config = Bumblebee.configure(generation_config, max_new_tokens: 100)

serving =
  Bumblebee.Vision.image_to_text(model_info, featurizer, tokenizer, generation_config,
    compile: [batch_size: 1],
    defn_options: [compiler: EXLA]
  )
```

```elixir
data =
  "/Users/vlee/Projects/companion/notebooks/files/ids/"
  |> File.ls!()
  |> Enum.reject(fn i -> i == ".DS_Store" end)
  |> Enum.map(fn img ->
    image =
      Kino.FS.file_path(img)
      |> StbImage.read_file!()

    case Nx.Serving.run(serving, image) do
      %{results: [%{text: text}]} ->
        %{caption: text, file: img}

      _ ->
        %{caption: "Unable to create caption", file: img}
    end
  end)

Kino.DataTable.new(
  data,
  keys: [:file, :caption],
  name: "Gov't ID Uploads with Captions"
)
```

```elixir
defmodule FaceDetect do
  use Kino.JS
  require Logger

  asset "main.css" do
    css = "https://raw.githubusercontent.com/vanessaklee/Notebooks/main/ElixirConf24/fd.css"
    Req.get!(css).body
  end

  asset "main.js" do
    js = "https://raw.githubusercontent.com/vanessaklee/Notebooks/main/ElixirConf24/fd.js"
    Req.get!(js).body
  end

  def new() do
    html = "https://raw.githubusercontent.com/vanessaklee/Notebooks/main/ElixirConf24/fd.html"
    Kino.JS.new(__MODULE__, Req.get!(html).body)
  end
end

FaceDetect.new()
```
